From 5bbdbd3a34fa1027f4a2cbdedeef2b10631b5398 Mon Sep 17 00:00:00 2001
From: KO Myung-Hun <komh@chollian.net>
Date: Tue, 24 Oct 2017 20:15:06 +0900
Subject: [PATCH 04/27] Revert "qt: drop Qt 4 support, set minimal Qt version
 to 5.5"

This reverts commit 1c221a77d92935866e897254c07e1d12a4b95ae0.

OS/2 still uses Qt 4.
---
 configure.ac                                  | 17 ++++++++-----
 modules/gui/qt/components/info_panels.cpp     |  4 +++
 .../gui/qt/components/interface_widgets.cpp   |  8 +++---
 modules/gui/qt/components/open_panels.cpp     |  6 +++++
 modules/gui/qt/components/playlist/views.cpp  |  4 +++
 modules/gui/qt/dialogs/messages.cpp           |  4 +++
 modules/gui/qt/dialogs/plugins.cpp            | 18 +++++++++++++
 modules/gui/qt/dialogs/toolbar.cpp            |  8 ++++++
 modules/gui/qt/dialogs_provider.cpp           |  6 +++++
 modules/gui/qt/main_interface_win32.cpp       | 25 ++++++++++++++++---
 modules/gui/qt/main_interface_win32.hpp       |  2 ++
 modules/gui/qt/qt.cpp                         | 24 ++++++++++++------
 modules/gui/qt/qt.hpp                         | 11 ++++++--
 modules/gui/qt/util/timetooltip.cpp           |  2 +-
 14 files changed, 117 insertions(+), 22 deletions(-)

diff --git a/configure.ac b/configure.ac
index 50f40e2d98..b679c1ea2a 100644
--- a/configure.ac
+++ b/configure.ac
@@ -3776,15 +3776,20 @@ AS_IF([test "${enable_qt}" != "no"], [
       AC_PATH_PROGS(RCC, [rcc-qt5 rcc], rcc, ["${QT_HOST_PATH}" "${QT_PATH}/bin"])
       AC_PATH_PROGS(UIC, [uic-qt5 uic], uic, ["${QT_HOST_PATH}" "${QT_PATH}/bin"])
     ], [
-      AS_IF([test -n "${enable_qt}"],[
-        AC_MSG_ERROR([${QT_PKG_ERRORS}.])
-      ],[
-        AC_MSG_WARN([${QT_PKG_ERRORS}.])
+      PKG_CHECK_MODULES([QT], [QtCore QtGui >= 4.8.0],, [
+        AS_IF([test -n "${enable_qt}"],[
+          AC_MSG_ERROR([${QT_PKG_ERRORS}.])
+        ],[
+          AC_MSG_WARN([${QT_PKG_ERRORS}.])
+        ])
+        enable_qt="no"
       ])
-      enable_qt="no"
+      QT_PATH="$(eval $PKG_CONFIG --variable=exec_prefix QtCore)"
+      AC_PATH_PROGS(MOC, [moc-qt4 moc], moc, ["${QT_PATH}/bin"])
+      AC_PATH_PROG(RCC, rcc, rcc, ["${QT_PATH}/bin"])
+      AC_PATH_PROGS(UIC, [uic-qt4 uic], uic, ["${QT_PATH}/bin"])
     ])
 ])
-
 AS_IF([test "${enable_qt}" != "no"], [
   ALIASES="${ALIASES} qvlc"
 ])
diff --git a/modules/gui/qt/components/info_panels.cpp b/modules/gui/qt/components/info_panels.cpp
index 161f593942..a3c507dc35 100644
--- a/modules/gui/qt/components/info_panels.cpp
+++ b/modules/gui/qt/components/info_panels.cpp
@@ -479,7 +479,11 @@ InfoPanel::InfoPanel( QWidget *parent ) : QWidget( parent )
      InfoTree = new QTreeWidget(this);
      InfoTree->setColumnCount( 1 );
      InfoTree->header()->hide();
+#if HAS_QT5
      InfoTree->header()->setSectionResizeMode(QHeaderView::ResizeToContents);
+#else
+     InfoTree->header()->setResizeMode(QHeaderView::ResizeToContents);
+#endif
      layout->addWidget(InfoTree, 1, 0 );
 }
 
diff --git a/modules/gui/qt/components/interface_widgets.cpp b/modules/gui/qt/components/interface_widgets.cpp
index 78dbc2f9c3..abedeab30f 100644
--- a/modules/gui/qt/components/interface_widgets.cpp
+++ b/modules/gui/qt/components/interface_widgets.cpp
@@ -62,7 +62,7 @@
 # include <QWindow>
 #endif
 
-#if defined(_WIN32)
+#if defined(_WIN32) && HAS_QT5
 #include <QWindow>
 #include <qpa/qplatformnativeinterface.h>
 #endif
@@ -202,7 +202,7 @@ QSize VideoWidget::physicalSize() const
         return QSize( x_attributes.width, x_attributes.height );
     }
 #endif
-#if defined(_WIN32)
+#if defined(_WIN32) && HAS_QT5
     HWND hwnd;
     RECT rect;
 
@@ -219,9 +219,11 @@ QSize VideoWidget::physicalSize() const
 #   if HAS_QT56
     /* Android-like scaling */
     current_size *= devicePixelRatioF();
-#   else
+#   elif HAS_QT54
     /* OSX-like scaling */
     current_size *= devicePixelRatio();
+#   else
+#       warning "No HiDPI support"
 #   endif
 
     return current_size;
diff --git a/modules/gui/qt/components/open_panels.cpp b/modules/gui/qt/components/open_panels.cpp
index 92b3522cc0..3b8478cfef 100644
--- a/modules/gui/qt/components/open_panels.cpp
+++ b/modules/gui/qt/components/open_panels.cpp
@@ -280,9 +280,15 @@ void FileOpenPanel::updateMRL()
             fileList << url.toEncoded();
     else
     {
+#if HAS_QT5
         QList<QUrl> urls = dialogBox->selectedUrls();
         foreach( const QUrl &url, urls )
             fileList.append( url.toEncoded() );
+#else
+        fileList = dialogBox->selectedFiles();
+        for( int i = 0; i < fileList.count(); i++ )
+            fileList[i] = toURI( fileList[i] );
+#endif
     }
 
     /* Options */
diff --git a/modules/gui/qt/components/playlist/views.cpp b/modules/gui/qt/components/playlist/views.cpp
index ecc6b9918d..e8b1a49d10 100644
--- a/modules/gui/qt/components/playlist/views.cpp
+++ b/modules/gui/qt/components/playlist/views.cpp
@@ -431,7 +431,11 @@ PlTreeView::PlTreeView( QAbstractItemModel *, QWidget *parent ) : QTreeView( par
     viewport()->setAttribute( Qt::WA_Hover );
     header()->setSortIndicator( -1 , Qt::AscendingOrder );
     header()->setSortIndicatorShown( true );
+#if HAS_QT5
     header()->setSectionsClickable( true );
+#else
+    header()->setClickable( true );
+#endif
     header()->setContextMenuPolicy( Qt::CustomContextMenu );
 
     setSelectionBehavior( QAbstractItemView::SelectRows );
diff --git a/modules/gui/qt/dialogs/messages.cpp b/modules/gui/qt/dialogs/messages.cpp
index c015868244..688543caf7 100644
--- a/modules/gui/qt/dialogs/messages.cpp
+++ b/modules/gui/qt/dialogs/messages.cpp
@@ -340,7 +340,11 @@ void MessagesDialog::MsgCallback( void *self, int type, const vlc_log_t *item,
 {
     MessagesDialog *dialog = (MessagesDialog *)self;
     char *str;
+#if HAS_QT5
     int verbosity = dialog->verbosity.load();
+#else
+    int verbosity = dialog->verbosity;
+#endif
 
     if( verbosity < 0 || verbosity < (type - VLC_MSG_ERR)
      || unlikely(vasprintf( &str, format, ap ) == -1) )
diff --git a/modules/gui/qt/dialogs/plugins.cpp b/modules/gui/qt/dialogs/plugins.cpp
index 93c92b9fa6..9edcce9591 100644
--- a/modules/gui/qt/dialogs/plugins.cpp
+++ b/modules/gui/qt/dialogs/plugins.cpp
@@ -117,7 +117,11 @@ PluginTab::PluginTab( intf_thread_t *p_intf_ )
     layout->addWidget( treePlugins, 0, 0, 1, -1 );
 
     /* Users cannot move the columns around but we need to sort */
+#if HAS_QT5
     treePlugins->header()->setSectionsMovable( false );
+#else
+    treePlugins->header()->setMovable( false );
+#endif
     treePlugins->header()->setSortIndicatorShown( true );
     //    treePlugins->header()->setResizeMode( QHeaderView::ResizeToContents );
     treePlugins->setAlternatingRowColors( true );
@@ -1042,7 +1046,11 @@ void ExtensionItemDelegate::paint( QPainter *painter,
                                    const QStyleOptionViewItem &option,
                                    const QModelIndex &index ) const
 {
+#if HAS_QT5
     QStyleOptionViewItem opt = option;
+#else
+    QStyleOptionViewItemV4 opt = option;
+#endif
     initStyleOption( &opt, index );
 
     // Draw background
@@ -1124,7 +1132,11 @@ void AddonItemDelegate::paint( QPainter *painter,
                                const QStyleOptionViewItem &option,
                                const QModelIndex &index ) const
 {
+#if HAS_QT5
     QStyleOptionViewItem newopt = option;
+#else
+    QStyleOptionViewItemV4 newopt = option;
+#endif
     int i_state = index.data( AddonsListModel::StateRole ).toInt();
     int i_type = index.data( AddonsListModel::TypeRole ).toInt();
 
@@ -1247,9 +1259,15 @@ void AddonItemDelegate::paint( QPainter *painter,
                 progressbar->setGeometry(
                     newopt.rect.adjusted( adjustment.width(), adjustment.height(),
                                           -adjustment.width(), -adjustment.height() ) );
+#if HAS_QT5
                 painter->drawPixmap( newopt.rect.left() + adjustment.width(),
                                      newopt.rect.top() + adjustment.height(),
                                      progressbar->grab() );
+#else
+                painter->drawPixmap( newopt.rect.left() + adjustment.width(),
+                                     newopt.rect.top() + adjustment.height(),
+                                     QPixmap::grabWidget( progressbar ) );
+#endif
             }
             painter->restore();
         }
diff --git a/modules/gui/qt/dialogs/toolbar.cpp b/modules/gui/qt/dialogs/toolbar.cpp
index 58a90f7c5b..41ba760fbe 100644
--- a/modules/gui/qt/dialogs/toolbar.cpp
+++ b/modules/gui/qt/dialogs/toolbar.cpp
@@ -318,6 +318,7 @@ void PreviewWidget::paintEvent( QPaintEvent * )
 
     for( int i=0; i<3; i++ )
     {
+#if HAS_QT5
         pixmaps[i] = bars[i]->grab( bars[i]->contentsRect() );
         /* Because non shown widgets do not have their bitmap updated, we need
            to force redraw to grab a pixmap matching layout size */
@@ -327,6 +328,9 @@ void PreviewWidget::paintEvent( QPaintEvent * )
             pixmaps[i] = bars[i]->grab( bars[i]->contentsRect() );
         }
 
+#else
+        pixmaps[i] = QPixmap::grabWidget( bars[i], bars[i]->contentsRect() );
+#endif
         for( int j=0; j < bars[i]->layout()->count(); j++ )
         {
             QLayoutItem *item = bars[i]->layout()->itemAt( j );
@@ -584,7 +588,11 @@ WidgetListing::WidgetListing( intf_thread_t *p_intf, QWidget *_parent )
         if( widget == NULL ) continue;
 
 
+#if HAS_QT5
         widgetItem->setIcon( QIcon( widget->grab() ) );
+#else
+        widgetItem->setIcon( QIcon( QPixmap::grabWidget( widget ) ) );
+#endif
         widgetItem->setToolTip( widgetItem->text() );
         widget->hide();
         widgetItem->setData( Qt::UserRole, QVariant( i ) );
diff --git a/modules/gui/qt/dialogs_provider.cpp b/modules/gui/qt/dialogs_provider.cpp
index b816d29ae6..de5b403ded 100644
--- a/modules/gui/qt/dialogs_provider.cpp
+++ b/modules/gui/qt/dialogs_provider.cpp
@@ -121,10 +121,16 @@ QStringList DialogsProvider::getOpenURL( QWidget *parent,
                                          QString *selectedFilter )
 {
     QStringList res;
+#if HAS_QT5
     QList<QUrl> urls = QFileDialog::getOpenFileUrls( parent, caption, dir, filter, selectedFilter );
 
     foreach( const QUrl& url, urls )
         res.append( url.toEncoded() );
+#else
+    QStringList files = QFileDialog::getOpenFileNames( parent, caption, dir.toLocalFile(), filter, selectedFilter );
+    foreach ( const QString& file, files )
+        res.append( QUrl::fromLocalFile( file ).toEncoded() );
+#endif
 
     return res;
 }
diff --git a/modules/gui/qt/main_interface_win32.cpp b/modules/gui/qt/main_interface_win32.cpp
index 8e5f1b8c59..d0ed14101f 100644
--- a/modules/gui/qt/main_interface_win32.cpp
+++ b/modules/gui/qt/main_interface_win32.cpp
@@ -37,8 +37,10 @@
 
 #include <assert.h>
 
-#include <QWindow>
-#include <qpa/qplatformnativeinterface.h>
+#if HAS_QT5
+# include <QWindow>
+# include <qpa/qplatformnativeinterface.h>
+#endif
 
 #define WM_APPCOMMAND 0x0319
 
@@ -104,21 +106,32 @@ MainInterfaceWin32::~MainInterfaceWin32()
 
 HWND MainInterfaceWin32::WinId( QWidget *w )
 {
+#if HAS_QT5
     if( w && w->windowHandle() )
         return static_cast<HWND>(QGuiApplication::platformNativeInterface()->
             nativeResourceForWindow("handle", w->windowHandle()));
     else
         return 0;
+#else
+    return winId();
+#endif
 }
 
+#if !HAS_QT5
+static const int PremultipliedAlpha = QPixmap::PremultipliedAlpha;
+static HBITMAP qt_pixmapToWinHBITMAP(const QPixmap &p, int hbitmapFormat = 0)
+{
+    return p.toWinHBITMAP((enum QBitmap::HBitmapFormat)hbitmapFormat);
+}
+#else
 Q_GUI_EXPORT HBITMAP qt_pixmapToWinHBITMAP(const QPixmap &p, int hbitmapFormat = 0);
-
 enum HBitmapFormat
 {
     NoAlpha,
     PremultipliedAlpha,
     Alpha
 };
+#endif
 
 void MainInterfaceWin32::createTaskBarButtons()
 {
@@ -215,10 +228,12 @@ void MainInterfaceWin32::createTaskBarButtons()
         changeThumbbarButtons( THEMIM->getIM()->playingStatus() );
 }
 
+#if HAS_QT5
 bool MainInterfaceWin32::nativeEvent(const QByteArray &, void *message, long *result)
 {
     return winEvent( static_cast<MSG*>( message ), result );
 }
+#endif
 
 bool MainInterfaceWin32::winEvent ( MSG * msg, long * result )
 {
@@ -331,8 +346,12 @@ void MainInterfaceWin32::toggleUpdateSystrayMenuWhenVisible()
      * but ignore the ones always on top
      * and the ones which can't be activated */
     HWND winId;
+#if HAS_QT5
     QWindow *window = windowHandle();
     winId = static_cast<HWND>(QGuiApplication::platformNativeInterface()->nativeResourceForWindow("handle", window));
+#else
+    winId = internalWinId();
+#endif
 
     WINDOWINFO wi;
     HWND hwnd;
diff --git a/modules/gui/qt/main_interface_win32.hpp b/modules/gui/qt/main_interface_win32.hpp
index 1e456c4c35..347eb8ea96 100644
--- a/modules/gui/qt/main_interface_win32.hpp
+++ b/modules/gui/qt/main_interface_win32.hpp
@@ -36,7 +36,9 @@ public:
     virtual ~MainInterfaceWin32();
 
 private:
+#if HAS_QT5
     virtual bool nativeEvent(const QByteArray &eventType, void *message, long *result) Q_DECL_OVERRIDE;
+#endif
     virtual bool winEvent( MSG *, long * );
     virtual void toggleUpdateSystrayMenuWhenVisible() Q_DECL_OVERRIDE;
 
diff --git a/modules/gui/qt/qt.cpp b/modules/gui/qt/qt.cpp
index cbd197750a..93ba2f683c 100644
--- a/modules/gui/qt/qt.cpp
+++ b/modules/gui/qt/qt.cpp
@@ -53,14 +53,18 @@
 
 #ifdef _WIN32 /* For static builds */
  #include <QtPlugin>
-
- #ifdef QT_STATICPLUGIN
-  Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)
-  Q_IMPORT_PLUGIN(QSvgIconPlugin)
-  Q_IMPORT_PLUGIN(QSvgPlugin)
-  #if !HAS_QT56
-   Q_IMPORT_PLUGIN(AccessibleFactory)
+ #if HAS_QT5
+  #ifdef QT_STATICPLUGIN
+   Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)
+   Q_IMPORT_PLUGIN(QSvgIconPlugin)
+   Q_IMPORT_PLUGIN(QSvgPlugin)
+   #if !HAS_QT56
+    Q_IMPORT_PLUGIN(AccessibleFactory)
+   #endif
   #endif
+ #else
+  Q_IMPORT_PLUGIN(qjpeg)
+  Q_IMPORT_PLUGIN(qtaccessiblewidgets)
  #endif
 #endif
 
@@ -596,6 +600,7 @@ static void *ThreadPlatform( void *obj, char *platform_name )
 
         /* Check window type from the Qt platform back-end */
         p_sys->voutWindowType = VOUT_WINDOW_TYPE_INVALID;
+#if HAS_QT5
         QString platform = app.platformName();
         if( platform == qfu("xcb") )
             p_sys->voutWindowType = VOUT_WINDOW_TYPE_XID;
@@ -607,6 +612,11 @@ static void *ThreadPlatform( void *obj, char *platform_name )
             p_sys->voutWindowType = VOUT_WINDOW_TYPE_NSOBJECT;
         else
             msg_Err( p_intf, "unknown Qt platform: %s", qtu(platform) );
+#elif defined (Q_WS_WIN) || defined (Q_WS_PM)
+        p_sys->voutWindowType = VOUT_WINDOW_TYPE_HWND;
+#elif defined (Q_WS_MAC)
+        p_sys->voutWindowType = VOUT_WINDOW_TYPE_NSOBJECT;
+#endif
 
         var_Create( THEPL, "qt4-iface", VLC_VAR_ADDRESS );
         var_SetAddress( THEPL, "qt4-iface", p_intf );
diff --git a/modules/gui/qt/qt.hpp b/modules/gui/qt/qt.hpp
index e59583ab71..14e4b782cb 100644
--- a/modules/gui/qt/qt.hpp
+++ b/modules/gui/qt/qt.hpp
@@ -43,13 +43,20 @@
 #include <QString>
 #include <QUrl>
 
-#if ( QT_VERSION < 0x050500 )
-# error Update your Qt version to at least 5.5.0
+#if ( QT_VERSION < 0x040800 )
+# error Update your Qt version to at least 4.8.0
 #endif
 
+#define HAS_QT5  ( QT_VERSION >= 0x050000 )
+#define HAS_QT54 ( QT_VERSION >= 0x050400 )
 #define HAS_QT56 ( QT_VERSION >= 0x050600 )
 #define HAS_QT510 ( QT_VERSION >= 0x051000 )
 
+/* Q_DECL_OVERRIDE is a Qt5 feature, add empty define to not break with Qt4 */
+#if !HAS_QT5 && !defined(Q_DECL_OVERRIDE)
+# define Q_DECL_OVERRIDE
+#endif
+
 enum {
     DialogEventTypeOffset = 0,
     IMEventTypeOffset     = 100,
diff --git a/modules/gui/qt/util/timetooltip.cpp b/modules/gui/qt/util/timetooltip.cpp
index 7a63a9d7d9..66a01e3eeb 100644
--- a/modules/gui/qt/util/timetooltip.cpp
+++ b/modules/gui/qt/util/timetooltip.cpp
@@ -70,7 +70,7 @@ void TimeTooltip::adjustPosition()
 
     // The desired label position is just above the target
     QPoint position( mTarget.x() - size.width() / 2,
-#if defined( Q_OS_WIN )
+#if defined( Q_OS_WIN ) && HAS_QT5
         mTarget.y() - 2 * size.height() - TIP_HEIGHT / 2 );
 #else
         mTarget.y() - size.height() - TIP_HEIGHT / 2 );
-- 
2.22.0

